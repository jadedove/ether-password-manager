"use client";
import { Separator } from "@/components/ui/separator";
import HooverAnimation from "../../lib/hoover-animation";
import Trash from "../../public/icons/trash.json";
import * as Popover from "@radix-ui/react-popover";
import * as React from "react";
import { SVGProps } from "react";
import { toast } from "@/components/ui/use-toast";
import { ProviderContext } from "@/components/provider";
const More = (props: SVGProps<SVGSVGElement>) => (
  <svg
    width={24}
    height={24}
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <g id="more-horizontal">
      <path
        id="Vector"
        fillRule="evenodd"
        clipRule="evenodd"
        d="M10.2461 12.0002C10.2461 11.0337 11.0296 10.2502 11.9961 10.2502H12.0051C12.9716 10.2502 13.7551 11.0337 13.7551 12.0002C13.7551 12.9667 12.9716 13.7502 12.0051 13.7502H11.9961C11.0296 13.7502 10.2461 12.9667 10.2461 12.0002Z"
        fill="#F1FBF8"
      />
      <path
        id="Vector_2"
        fillRule="evenodd"
        clipRule="evenodd"
        d="M16.25 12.0002C16.25 11.0337 17.0335 10.2502 18 10.2502H18.009C18.9755 10.2502 19.759 11.0337 19.759 12.0002C19.759 12.9667 18.9755 13.7502 18.009 13.7502H18C17.0335 13.7502 16.25 12.9667 16.25 12.0002Z"
        fill="#F1FBF8"
      />
      <path
        id="Vector_3"
        fillRule="evenodd"
        clipRule="evenodd"
        d="M4.25 12.0002C4.25 11.0337 5.0335 10.2502 6 10.2502H6.00898C6.97548 10.2502 7.75898 11.0337 7.75898 12.0002C7.75898 12.9667 6.97548 13.7502 6.00898 13.7502H6C5.0335 13.7502 4.25 12.9667 4.25 12.0002Z"
        fill="#F1FBF8"
      />
    </g>
  </svg>
);

const PasswordHistory = (props: SVGProps<SVGSVGElement>) => (
  <svg
    width={20}
    height={20}
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <g id="work-history">
      <path
        id="Vector"
        d="M9.1721 17.4999H8.00457C5.01686 17.4999 3.52301 17.4999 2.59485 16.5541C1.66669 15.6083 1.66669 14.0861 1.66669 11.0416C1.66669 7.99709 1.66669 6.47485 2.59485 5.52905C3.52301 4.58325 5.01686 4.58325 8.00457 4.58325H11.1735C14.1612 4.58325 15.6551 4.58325 16.5833 5.52905C17.2974 6.25674 17.462 7.32567 17.5 9.16659"
        stroke="#CDE2DB"
        strokeWidth={1.25}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        id="Vector_2"
        d="M15.7083 15.7083L14.5833 14.9583V13.0833M10.8333 14.5833C10.8333 16.6543 12.5122 18.3333 14.5833 18.3333C16.6544 18.3333 18.3333 16.6543 18.3333 14.5833C18.3333 12.5122 16.6544 10.8333 14.5833 10.8333C12.5122 10.8333 10.8333 12.5122 10.8333 14.5833Z"
        stroke="#CDE2DB"
        strokeWidth={1.25}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        id="Vector_3"
        d="M13.3333 4.58341L13.2506 4.32586C12.838 3.04249 12.6317 2.40081 12.1407 2.03377C11.6496 1.66675 10.9975 1.66675 9.69298 1.66675H9.47365C8.16918 1.66675 7.51695 1.66675 7.0259 2.03377C6.53486 2.40081 6.32861 3.04249 5.9161 4.32586L5.83331 4.58341"
        stroke="#CDE2DB"
        strokeWidth={1.25}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </g>
  </svg>
);

const Share = (props: SVGProps<SVGSVGElement>) => (
  <svg
    width={20}
    height={20}
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <g id="share-03">
      <path
        id="Vector"
        fillRule="evenodd"
        clipRule="evenodd"
        d="M16.3405 2.52958C16.8696 2.97984 17.5917 3.61838 17.991 4.09143C18.2116 4.35276 18.3474 4.68854 18.3321 5.05674C18.3186 5.38417 18.1876 5.67798 17.9908 5.91116C17.5916 6.38393 16.8697 7.02238 16.3407 7.47273C16.1929 7.5985 16.0086 7.75848 15.839 7.86369C15.672 7.96726 15.2648 8.17871 14.7956 7.96195C14.3238 7.74398 14.2226 7.29265 14.194 7.10084C14.1663 6.91606 14.1665 6.68998 14.1666 6.50073C14.1668 6.29106 14.1666 6.0814 14.1666 5.87173C13.7752 5.88458 13.4277 5.90535 13.1141 5.93838C12.2693 6.02733 11.7693 6.19749 11.3878 6.47173C11.0968 6.68088 10.8415 6.93558 10.6316 7.22603C10.3564 7.60686 10.185 8.1064 10.0939 8.95092C10.0011 9.81092 9.99998 10.9258 9.99998 12.5012C9.99998 12.9614 9.6269 13.3345 9.16665 13.3345C8.7064 13.3345 8.33331 12.9614 8.33331 12.5012V12.4522C8.3333 10.9368 8.33329 9.732 8.43681 8.77225C8.54306 7.78672 8.7664 6.96155 9.28073 6.24985C9.59556 5.81418 9.97856 5.43212 10.4151 5.11838C11.1281 4.60589 11.9537 4.38467 12.9396 4.28087C13.3107 4.24179 13.7185 4.21828 14.1666 4.20435C14.1666 3.97014 14.1668 3.73593 14.1666 3.50173C14.1665 3.31253 14.1663 3.08649 14.194 2.90173C14.2226 2.70989 14.3239 2.25866 14.7956 2.0407C15.2646 1.82393 15.6718 2.03523 15.8388 2.13878C16.0084 2.24396 16.1927 2.40388 16.3405 2.52958Z"
        fill="#CDE2DB"
      />
      <path
        id="Vector_2"
        fillRule="evenodd"
        clipRule="evenodd"
        d="M10.0835 2.49858C10.0844 2.95882 9.71194 3.33258 9.25169 3.33342C7.71726 3.33617 6.62705 3.35797 5.79862 3.49206C4.99455 3.62221 4.53 3.84494 4.18766 4.18728C3.81911 4.55583 3.5881 5.06722 3.46322 5.99602C3.33513 6.94879 3.33335 8.20849 3.33335 9.99983C3.33335 11.7912 3.33512 13.0509 3.46322 14.0037C3.5881 14.9325 3.8191 15.4439 4.18765 15.8124C4.5562 16.181 5.06759 16.412 5.99639 16.5369C6.94916 16.665 8.20886 16.6667 10.0003 16.6667C11.7916 16.6667 13.0514 16.665 14.0041 16.5369C14.9329 16.412 15.4443 16.181 15.8129 15.8124C16.1552 15.4701 16.3779 15.0056 16.508 14.2015C16.6421 13.3731 16.6639 12.2828 16.6667 10.7484C16.6675 10.2882 17.0413 9.91575 17.5015 9.91658C17.9618 9.91742 18.3342 10.2912 18.3334 10.7514C18.3306 12.2583 18.3124 13.4851 18.1533 14.4678C17.9903 15.4748 17.6668 16.3155 16.9914 16.991C16.2615 17.7207 15.3398 18.039 14.2262 18.1887C13.1494 18.3334 11.7774 18.3334 10.062 18.3334H9.93852C8.22311 18.3334 6.85107 18.3334 5.77431 18.1887C4.6607 18.039 3.73898 17.7207 3.00915 16.9909C2.27931 16.2612 1.96114 15.3394 1.81141 14.2258C1.66665 13.149 1.66667 11.777 1.66669 10.0616V9.93817C1.66667 8.22273 1.66665 6.85069 1.81142 5.77393C1.96114 4.66032 2.27932 3.73861 3.00915 3.00877C3.6846 2.33332 4.52528 2.00981 5.53231 1.84681C6.51499 1.68775 7.74178 1.66947 9.24869 1.66675C9.70894 1.66592 10.0827 2.03835 10.0835 2.49858Z"
        fill="#CDE2DB"
      />
    </g>
  </svg>
);

const Edit = (props: SVGProps<SVGSVGElement>) => (
  <svg
    width={20}
    height={20}
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <g id="pencil-edit-02">
      <path
        id="Vector"
        fillRule="evenodd"
        clipRule="evenodd"
        d="M9.93983 1.875H10C10.4487 1.875 10.8125 2.23877 10.8125 2.6875C10.8125 3.13623 10.4487 3.5 10 3.5C8.25346 3.5 7.02529 3.50173 6.09637 3.62662C5.19082 3.74837 4.69223 3.97359 4.33292 4.33292C3.97359 4.69223 3.74837 5.19082 3.62662 6.09637C3.50173 7.02529 3.5 8.25346 3.5 10C3.5 11.7466 3.50173 12.9748 3.62662 13.9037C3.74837 14.8092 3.97359 15.3078 4.33292 15.6671C4.69223 16.0264 5.19082 16.2517 6.09637 16.3734C7.02529 16.4983 8.25346 16.5 10 16.5C11.7466 16.5 12.9748 16.4983 13.9037 16.3734C14.8092 16.2517 15.3078 16.0264 15.6671 15.6671C16.0264 15.3078 16.2517 14.8092 16.3734 13.9037C16.4983 12.9748 16.5 11.7466 16.5 10C16.5 9.55125 16.8637 9.1875 17.3125 9.1875C17.7612 9.1875 18.125 9.55125 18.125 10V10.0602C18.125 11.7327 18.125 13.0703 17.9839 14.1202C17.8379 15.2059 17.5277 16.1046 16.8162 16.8162C16.1046 17.5277 15.2059 17.8379 14.1202 17.9839C13.0703 18.125 11.7327 18.125 10.0602 18.125H9.93983C8.26736 18.125 6.92965 18.125 5.87983 17.9839C4.79409 17.8379 3.89544 17.5277 3.18387 16.8162C2.4723 16.1046 2.16208 15.2059 2.01611 14.1202C1.87497 13.0703 1.87498 11.7327 1.875 10.0602V9.93983C1.87498 8.26734 1.87497 6.92965 2.01611 5.87983C2.16208 4.79409 2.4723 3.89544 3.18387 3.18387C3.89544 2.4723 4.79409 2.16208 5.87983 2.01611C6.92965 1.87497 8.26734 1.87498 9.93983 1.875Z"
        fill="#CDE2DB"
      />
      <path
        id="Vector_2"
        fillRule="evenodd"
        clipRule="evenodd"
        d="M17.4581 2.54192C16.5689 1.65269 15.1272 1.65269 14.2379 2.54192L13.5116 3.26824L16.7317 6.48846L17.4581 5.76207C18.3474 4.87285 18.3474 3.43114 17.4581 2.54192ZM15.8479 7.37235L12.6278 4.15212L8.64127 8.13864C7.83413 8.94565 7.34072 9.43884 7.00141 10.0461C6.81214 10.3848 6.64681 10.8985 6.50052 11.4242C6.35002 11.965 6.20186 12.5873 6.06043 13.1813L6.05869 13.1886C6.00843 13.3997 6.07129 13.6218 6.22476 13.7753C6.37823 13.9288 6.60033 13.9916 6.81146 13.9413L6.8187 13.9396C7.41272 13.7982 8.035 13.65 8.57585 13.4995C9.10152 13.3533 9.61527 13.1879 9.95402 12.9986C10.5612 12.6593 11.0544 12.166 11.8614 11.3588L15.8479 7.37235Z"
        fill="#CDE2DB"
      />
    </g>
  </svg>
);

const MoreItems = [
  {
    title: "Edit",
    icon: <Edit />,
    onClick: () => console.log("Edit"),
  },
  {
    title: "Share",
    icon: <Share />,
    onClick: () => console.log("Share"),
  },
  {
    title: "Delete",
    icon: (
      <HooverAnimation
        animationData={Trash}
        className="h-6 w-6 cursor-pointer"
      />
    ),
    onClick: () => console.log("Delete"),
  },
  {
    title: "History",
    icon: <PasswordHistory />,
    onClick: () => console.log("Password History"),
  },
];

export default function MorePopover({ id }: { id: number }) {
  const { deletePsw } = React.useContext(ProviderContext);
  const handleDeletePsw = async () => {
    await deletePsw(id);
    toast({
      variant: "destructive",
      title: "Password deleted",
    });
    window.location.reload();
  };

  return (
    <Popover.Root>
      <Popover.Trigger className="p-4">
        <More />
      </Popover.Trigger>
      <Popover.Content
        className="w-[200px] bg-[#0C0D10] rounded-[16px] z-20 absolute right-0 flex flex-col gap-2 px-1 py-2"
        side="bottom"
        align="end"
        alignOffset={-100}
      >
        {MoreItems.map((item, index) => (
          <>
            <div
              key={index}
              className="flex items-center w-full px-4 py-2 text-base text-white hover:bg-[#17191F] rounded-[8px]"
              onClick={item.onClick}
            >
              {item.icon}
              <span className="ml-2">{item.title}</span>
            </div>
            {index !== MoreItems.length - 1 && <Separator />}
          </>
        ))}
      </Popover.Content>
    </Popover.Root>
  );
}
